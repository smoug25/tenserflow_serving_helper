// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/smoug25/tensorflow_serving_helper/tensorflow/core/protobuf/named_tensor.proto

package tensorflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	framework "github.com/smoug25/tensorflow_serving_helper/tensorflow/core/framework"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A pair of tensor name and tensor values.
type NamedTensorProto struct {
	// Name of the tensor.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The client can populate a TensorProto using a tensorflow::Tensor`, or
	// directly using the protobuf field accessors.
	//
	// The client specifies whether the returned tensor values should be
	// filled tensor fields (float_val, int_val, etc.) or encoded in a
	// compact form in tensor.tensor_content.
	Tensor               *framework.TensorProto `protobuf:"bytes,2,opt,name=tensor,proto3" json:"tensor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NamedTensorProto) Reset()         { *m = NamedTensorProto{} }
func (m *NamedTensorProto) String() string { return proto.CompactTextString(m) }
func (*NamedTensorProto) ProtoMessage()    {}
func (*NamedTensorProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad817a8734b9eac4, []int{0}
}

func (m *NamedTensorProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedTensorProto.Unmarshal(m, b)
}
func (m *NamedTensorProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedTensorProto.Marshal(b, m, deterministic)
}
func (m *NamedTensorProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedTensorProto.Merge(m, src)
}
func (m *NamedTensorProto) XXX_Size() int {
	return xxx_messageInfo_NamedTensorProto.Size(m)
}
func (m *NamedTensorProto) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedTensorProto.DiscardUnknown(m)
}

var xxx_messageInfo_NamedTensorProto proto.InternalMessageInfo

func (m *NamedTensorProto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedTensorProto) GetTensor() *framework.TensorProto {
	if m != nil {
		return m.Tensor
	}
	return nil
}

func init() {
	proto.RegisterType((*NamedTensorProto)(nil), "tensorflow.NamedTensorProto")
}

func init() {
	proto.RegisterFile("github.com/smoug25/tensorflow_serving_helper/tensorflow/core/protobuf/named_tensor.proto", fileDescriptor_ad817a8734b9eac4)
}

var fileDescriptor_ad817a8734b9eac4 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x8a, 0x48, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0xce, 0xcd, 0x2f, 0x4d, 0x37, 0x32, 0xd5, 0x2f,
	0x49, 0xcd, 0x2b, 0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0x8f, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0xcc,
	0x4b, 0x8f, 0xcf, 0x48, 0xcd, 0x29, 0x48, 0x2d, 0x42, 0x92, 0xd1, 0x4f, 0xce, 0x2f, 0x4a, 0xd5,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0xcf, 0x4b, 0xcc, 0x4d, 0x4d, 0x89, 0x87,
	0x48, 0xeb, 0x81, 0x45, 0x85, 0xb8, 0x10, 0x8a, 0xa5, 0x82, 0x29, 0xb2, 0x25, 0xad, 0x28, 0x31,
	0x37, 0xb5, 0x3c, 0xbf, 0x28, 0x5b, 0x1f, 0xd9, 0x02, 0xa5, 0x70, 0x2e, 0x01, 0x3f, 0x90, 0xb5,
	0x21, 0x60, 0xc1, 0x00, 0xb0, 0xa5, 0x42, 0x5c, 0x2c, 0x20, 0xa7, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0x81, 0xd9, 0x42, 0xfa, 0x5c, 0x6c, 0x10, 0x7d, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc,
	0x46, 0xe2, 0x7a, 0x08, 0x0b, 0xf4, 0x90, 0x34, 0x07, 0x41, 0x95, 0x39, 0x19, 0x71, 0x49, 0xe4,
	0x17, 0xa5, 0x23, 0xab, 0x82, 0xbb, 0xc0, 0x49, 0x10, 0xdd, 0xca, 0xe2, 0x00, 0xc6, 0x1f, 0x8c,
	0x8c, 0x49, 0x6c, 0x60, 0x37, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xca, 0x0d, 0xea, 0xfb,
	0x50, 0x01, 0x00, 0x00,
}
