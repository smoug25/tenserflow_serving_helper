// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/protobuf/master.proto

package tensorflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	framework "tensorflow/core/framework"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateSessionRequest struct {
	// The initial graph definition.
	GraphDef *framework.GraphDef `protobuf:"bytes,1,opt,name=graph_def,json=graphDef,proto3" json:"graph_def,omitempty"`
	// Configuration options.
	Config *ConfigProto `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// The target string used from the client's perspective.
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionRequest) Reset()         { *m = CreateSessionRequest{} }
func (m *CreateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSessionRequest) ProtoMessage()    {}
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{0}
}

func (m *CreateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionRequest.Unmarshal(m, b)
}
func (m *CreateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionRequest.Merge(m, src)
}
func (m *CreateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSessionRequest.Size(m)
}
func (m *CreateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionRequest proto.InternalMessageInfo

func (m *CreateSessionRequest) GetGraphDef() *framework.GraphDef {
	if m != nil {
		return m.GraphDef
	}
	return nil
}

func (m *CreateSessionRequest) GetConfig() *ConfigProto {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CreateSessionRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type CreateSessionResponse struct {
	// The session handle to be used in subsequent calls for the created session.
	//
	// The client must arrange to call CloseSession with this returned
	// session handle to close the session.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// The initial version number for the graph, to be used in the next call
	// to ExtendSession.
	GraphVersion         int64    `protobuf:"varint,2,opt,name=graph_version,json=graphVersion,proto3" json:"graph_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionResponse) Reset()         { *m = CreateSessionResponse{} }
func (m *CreateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSessionResponse) ProtoMessage()    {}
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{1}
}

func (m *CreateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionResponse.Unmarshal(m, b)
}
func (m *CreateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionResponse.Marshal(b, m, deterministic)
}
func (m *CreateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionResponse.Merge(m, src)
}
func (m *CreateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSessionResponse.Size(m)
}
func (m *CreateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionResponse proto.InternalMessageInfo

func (m *CreateSessionResponse) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *CreateSessionResponse) GetGraphVersion() int64 {
	if m != nil {
		return m.GraphVersion
	}
	return 0
}

type ExtendSessionRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// REQUIRED: The nodes to be added to the session's graph. If any node has
	// the same name as an existing node, the operation will fail with
	// ILLEGAL_ARGUMENT.
	GraphDef *framework.GraphDef `protobuf:"bytes,2,opt,name=graph_def,json=graphDef,proto3" json:"graph_def,omitempty"`
	// REQUIRED: The version number of the graph to be extended. This will be
	// tested against the current server-side version number, and the operation
	// will fail with FAILED_PRECONDITION if they do not match.
	CurrentGraphVersion  int64    `protobuf:"varint,3,opt,name=current_graph_version,json=currentGraphVersion,proto3" json:"current_graph_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtendSessionRequest) Reset()         { *m = ExtendSessionRequest{} }
func (m *ExtendSessionRequest) String() string { return proto.CompactTextString(m) }
func (*ExtendSessionRequest) ProtoMessage()    {}
func (*ExtendSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{2}
}

func (m *ExtendSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtendSessionRequest.Unmarshal(m, b)
}
func (m *ExtendSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtendSessionRequest.Marshal(b, m, deterministic)
}
func (m *ExtendSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendSessionRequest.Merge(m, src)
}
func (m *ExtendSessionRequest) XXX_Size() int {
	return xxx_messageInfo_ExtendSessionRequest.Size(m)
}
func (m *ExtendSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendSessionRequest proto.InternalMessageInfo

func (m *ExtendSessionRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *ExtendSessionRequest) GetGraphDef() *framework.GraphDef {
	if m != nil {
		return m.GraphDef
	}
	return nil
}

func (m *ExtendSessionRequest) GetCurrentGraphVersion() int64 {
	if m != nil {
		return m.CurrentGraphVersion
	}
	return 0
}

type ExtendSessionResponse struct {
	// The new version number for the extended graph, to be used in the next call
	// to ExtendSession.
	NewGraphVersion      int64    `protobuf:"varint,4,opt,name=new_graph_version,json=newGraphVersion,proto3" json:"new_graph_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtendSessionResponse) Reset()         { *m = ExtendSessionResponse{} }
func (m *ExtendSessionResponse) String() string { return proto.CompactTextString(m) }
func (*ExtendSessionResponse) ProtoMessage()    {}
func (*ExtendSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{3}
}

func (m *ExtendSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtendSessionResponse.Unmarshal(m, b)
}
func (m *ExtendSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtendSessionResponse.Marshal(b, m, deterministic)
}
func (m *ExtendSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendSessionResponse.Merge(m, src)
}
func (m *ExtendSessionResponse) XXX_Size() int {
	return xxx_messageInfo_ExtendSessionResponse.Size(m)
}
func (m *ExtendSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendSessionResponse proto.InternalMessageInfo

func (m *ExtendSessionResponse) GetNewGraphVersion() int64 {
	if m != nil {
		return m.NewGraphVersion
	}
	return 0
}

type RunStepRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Tensors to be fed in the step. Each feed is a named tensor.
	Feed []*NamedTensorProto `protobuf:"bytes,2,rep,name=feed,proto3" json:"feed,omitempty"`
	// Fetches. A list of tensor names. The caller expects a tensor to
	// be returned for each fetch[i] (see RunStepResponse.tensor). The
	// order of specified fetches does not change the execution order.
	Fetch []string `protobuf:"bytes,3,rep,name=fetch,proto3" json:"fetch,omitempty"`
	// Target Nodes. A list of node names. The named nodes will be run
	// to but their outputs will not be fetched.
	Target []string `protobuf:"bytes,4,rep,name=target,proto3" json:"target,omitempty"`
	// Options for the run call.
	Options *RunOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	// Partial run handle (optional). If specified, this will be a partial run
	// execution, run up to the specified fetches.
	PartialRunHandle string `protobuf:"bytes,6,opt,name=partial_run_handle,json=partialRunHandle,proto3" json:"partial_run_handle,omitempty"`
	// If true then some errors, e.g., execution errors that have long
	// error messages, may return an OK RunStepResponse with the actual
	// error saved in the status_code/status_error_message fields of the
	// response body. This is a workaround since the RPC subsystem may
	// truncate long metadata messages.
	StoreErrorsInResponseBody bool `protobuf:"varint,7,opt,name=store_errors_in_response_body,json=storeErrorsInResponseBody,proto3" json:"store_errors_in_response_body,omitempty"`
	// Unique identifier for this request. Every RunStepRequest must
	// have a unique request_id, and retried RunStepRequest must have
	// the same request_id. If request_id is zero, retry detection is disabled.
	RequestId            int64    `protobuf:"varint,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunStepRequest) Reset()         { *m = RunStepRequest{} }
func (m *RunStepRequest) String() string { return proto.CompactTextString(m) }
func (*RunStepRequest) ProtoMessage()    {}
func (*RunStepRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{4}
}

func (m *RunStepRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunStepRequest.Unmarshal(m, b)
}
func (m *RunStepRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunStepRequest.Marshal(b, m, deterministic)
}
func (m *RunStepRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunStepRequest.Merge(m, src)
}
func (m *RunStepRequest) XXX_Size() int {
	return xxx_messageInfo_RunStepRequest.Size(m)
}
func (m *RunStepRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunStepRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunStepRequest proto.InternalMessageInfo

func (m *RunStepRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *RunStepRequest) GetFeed() []*NamedTensorProto {
	if m != nil {
		return m.Feed
	}
	return nil
}

func (m *RunStepRequest) GetFetch() []string {
	if m != nil {
		return m.Fetch
	}
	return nil
}

func (m *RunStepRequest) GetTarget() []string {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *RunStepRequest) GetOptions() *RunOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *RunStepRequest) GetPartialRunHandle() string {
	if m != nil {
		return m.PartialRunHandle
	}
	return ""
}

func (m *RunStepRequest) GetStoreErrorsInResponseBody() bool {
	if m != nil {
		return m.StoreErrorsInResponseBody
	}
	return false
}

func (m *RunStepRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type RunStepResponse struct {
	// NOTE: The order of the returned tensors may or may not match
	// the fetch order specified in RunStepRequest.
	Tensor []*NamedTensorProto `protobuf:"bytes,1,rep,name=tensor,proto3" json:"tensor,omitempty"`
	// Returned metadata if requested in the options.
	Metadata *RunMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// If store_errors_in_response_body is true in the request, then
	// optionally the server may return an OK status for the RPC and
	// fill the true status into the fields below, to allow for messages
	// that are too long to fit in metadata.
	StatusCode           Code     `protobuf:"varint,3,opt,name=status_code,json=statusCode,proto3,enum=tensorflow.error.Code" json:"status_code,omitempty"`
	StatusErrorMessage   string   `protobuf:"bytes,4,opt,name=status_error_message,json=statusErrorMessage,proto3" json:"status_error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunStepResponse) Reset()         { *m = RunStepResponse{} }
func (m *RunStepResponse) String() string { return proto.CompactTextString(m) }
func (*RunStepResponse) ProtoMessage()    {}
func (*RunStepResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{5}
}

func (m *RunStepResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunStepResponse.Unmarshal(m, b)
}
func (m *RunStepResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunStepResponse.Marshal(b, m, deterministic)
}
func (m *RunStepResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunStepResponse.Merge(m, src)
}
func (m *RunStepResponse) XXX_Size() int {
	return xxx_messageInfo_RunStepResponse.Size(m)
}
func (m *RunStepResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunStepResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunStepResponse proto.InternalMessageInfo

func (m *RunStepResponse) GetTensor() []*NamedTensorProto {
	if m != nil {
		return m.Tensor
	}
	return nil
}

func (m *RunStepResponse) GetMetadata() *RunMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RunStepResponse) GetStatusCode() Code {
	if m != nil {
		return m.StatusCode
	}
	return Code_OK
}

func (m *RunStepResponse) GetStatusErrorMessage() string {
	if m != nil {
		return m.StatusErrorMessage
	}
	return ""
}

type PartialRunSetupRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Tensors to be fed in future steps.
	Feed []string `protobuf:"bytes,2,rep,name=feed,proto3" json:"feed,omitempty"`
	// Fetches. A list of tensor names. The caller expects a tensor to be returned
	// for each fetch[i] (see RunStepResponse.tensor), for corresponding partial
	// RunStepRequests. The order of specified fetches does not change the
	// execution order.
	Fetch []string `protobuf:"bytes,3,rep,name=fetch,proto3" json:"fetch,omitempty"`
	// Target Nodes. A list of node names. The named nodes will be run in future
	// steps, but their outputs will not be fetched.
	Target []string `protobuf:"bytes,4,rep,name=target,proto3" json:"target,omitempty"`
	// Unique identifier for this request. Every PartialRunSetupRequest must
	// have a unique request_id, and retried PartialRunSetupRequest must have
	// the same request_id. If request_id is zero, retry detection is disabled.
	RequestId            int64    `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartialRunSetupRequest) Reset()         { *m = PartialRunSetupRequest{} }
func (m *PartialRunSetupRequest) String() string { return proto.CompactTextString(m) }
func (*PartialRunSetupRequest) ProtoMessage()    {}
func (*PartialRunSetupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{6}
}

func (m *PartialRunSetupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialRunSetupRequest.Unmarshal(m, b)
}
func (m *PartialRunSetupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialRunSetupRequest.Marshal(b, m, deterministic)
}
func (m *PartialRunSetupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialRunSetupRequest.Merge(m, src)
}
func (m *PartialRunSetupRequest) XXX_Size() int {
	return xxx_messageInfo_PartialRunSetupRequest.Size(m)
}
func (m *PartialRunSetupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialRunSetupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartialRunSetupRequest proto.InternalMessageInfo

func (m *PartialRunSetupRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *PartialRunSetupRequest) GetFeed() []string {
	if m != nil {
		return m.Feed
	}
	return nil
}

func (m *PartialRunSetupRequest) GetFetch() []string {
	if m != nil {
		return m.Fetch
	}
	return nil
}

func (m *PartialRunSetupRequest) GetTarget() []string {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *PartialRunSetupRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type PartialRunSetupResponse struct {
	// The unique handle corresponding to the ongoing partial run call setup by
	// the invocation to PartialRunSetup. This handle may be passed to
	// RunStepRequest to send and receive tensors for this partial run.
	PartialRunHandle     string   `protobuf:"bytes,1,opt,name=partial_run_handle,json=partialRunHandle,proto3" json:"partial_run_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartialRunSetupResponse) Reset()         { *m = PartialRunSetupResponse{} }
func (m *PartialRunSetupResponse) String() string { return proto.CompactTextString(m) }
func (*PartialRunSetupResponse) ProtoMessage()    {}
func (*PartialRunSetupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{7}
}

func (m *PartialRunSetupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialRunSetupResponse.Unmarshal(m, b)
}
func (m *PartialRunSetupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialRunSetupResponse.Marshal(b, m, deterministic)
}
func (m *PartialRunSetupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialRunSetupResponse.Merge(m, src)
}
func (m *PartialRunSetupResponse) XXX_Size() int {
	return xxx_messageInfo_PartialRunSetupResponse.Size(m)
}
func (m *PartialRunSetupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialRunSetupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartialRunSetupResponse proto.InternalMessageInfo

func (m *PartialRunSetupResponse) GetPartialRunHandle() string {
	if m != nil {
		return m.PartialRunHandle
	}
	return ""
}

type CloseSessionRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle        string   `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSessionRequest) Reset()         { *m = CloseSessionRequest{} }
func (m *CloseSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CloseSessionRequest) ProtoMessage()    {}
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{8}
}

func (m *CloseSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSessionRequest.Unmarshal(m, b)
}
func (m *CloseSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSessionRequest.Marshal(b, m, deterministic)
}
func (m *CloseSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSessionRequest.Merge(m, src)
}
func (m *CloseSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CloseSessionRequest.Size(m)
}
func (m *CloseSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSessionRequest proto.InternalMessageInfo

func (m *CloseSessionRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

type CloseSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSessionResponse) Reset()         { *m = CloseSessionResponse{} }
func (m *CloseSessionResponse) String() string { return proto.CompactTextString(m) }
func (*CloseSessionResponse) ProtoMessage()    {}
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{9}
}

func (m *CloseSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSessionResponse.Unmarshal(m, b)
}
func (m *CloseSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSessionResponse.Marshal(b, m, deterministic)
}
func (m *CloseSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSessionResponse.Merge(m, src)
}
func (m *CloseSessionResponse) XXX_Size() int {
	return xxx_messageInfo_CloseSessionResponse.Size(m)
}
func (m *CloseSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSessionResponse proto.InternalMessageInfo

// Reset() allows misbehaving or slow sessions to be aborted and closed, and
// causes their resources eventually to be released.  Reset() does not wait
// for the computations in old sessions to cease; it merely starts the
// process of tearing them down.  However, if a new session is started after
// a Reset(), the new session is isolated from changes that old sessions
// (started prior to the Reset()) may continue to make to resources, provided
// all those resources are in containers listed in "containers".
//
// Old sessions may continue to have side-effects on resources not in
// containers listed in "containers", and thus may affect future
// sessions' results in ways that are hard to predict.  Thus, if well-defined
// behavior is desired, is it recommended that all containers be listed in
// "containers".  Similarly, if a device_filter is specified, results may be
// hard to predict.
type ResetRequest struct {
	// A list of container names, which may be empty.
	//
	// If 'container' is not empty, releases resources in the given
	// containers in all devices.
	//
	// If 'container' is empty, releases resources in the default
	// container in all devices.
	Container []string `protobuf:"bytes,1,rep,name=container,proto3" json:"container,omitempty"`
	// When any filters are present, only devices that match the filters
	// will be reset. Each filter can be partially specified,
	// e.g. "/job:ps" "/job:worker/replica:3", etc.
	DeviceFilters        []string `protobuf:"bytes,2,rep,name=device_filters,json=deviceFilters,proto3" json:"device_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetRequest) Reset()         { *m = ResetRequest{} }
func (m *ResetRequest) String() string { return proto.CompactTextString(m) }
func (*ResetRequest) ProtoMessage()    {}
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{10}
}

func (m *ResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetRequest.Unmarshal(m, b)
}
func (m *ResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetRequest.Marshal(b, m, deterministic)
}
func (m *ResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetRequest.Merge(m, src)
}
func (m *ResetRequest) XXX_Size() int {
	return xxx_messageInfo_ResetRequest.Size(m)
}
func (m *ResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetRequest proto.InternalMessageInfo

func (m *ResetRequest) GetContainer() []string {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *ResetRequest) GetDeviceFilters() []string {
	if m != nil {
		return m.DeviceFilters
	}
	return nil
}

type ResetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetResponse) Reset()         { *m = ResetResponse{} }
func (m *ResetResponse) String() string { return proto.CompactTextString(m) }
func (*ResetResponse) ProtoMessage()    {}
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{11}
}

func (m *ResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetResponse.Unmarshal(m, b)
}
func (m *ResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetResponse.Marshal(b, m, deterministic)
}
func (m *ResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetResponse.Merge(m, src)
}
func (m *ResetResponse) XXX_Size() int {
	return xxx_messageInfo_ResetResponse.Size(m)
}
func (m *ResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetResponse proto.InternalMessageInfo

type ListDevicesRequest struct {
	// Optional: session_handle must be returned by a CreateSession call to the
	// same master service.
	//
	// When session_handle is empty, the ClusterSpec provided when the master was
	// started is used to compute the available devices. If the session_handle is
	// provided but not recognized, an error is returned. Finally, if a valid
	// session_handle is provided, the cluster configuration for that session is
	// used when computing the response.
	SessionHandle        string   `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDevicesRequest) Reset()         { *m = ListDevicesRequest{} }
func (m *ListDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListDevicesRequest) ProtoMessage()    {}
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{12}
}

func (m *ListDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesRequest.Unmarshal(m, b)
}
func (m *ListDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesRequest.Marshal(b, m, deterministic)
}
func (m *ListDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesRequest.Merge(m, src)
}
func (m *ListDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListDevicesRequest.Size(m)
}
func (m *ListDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesRequest proto.InternalMessageInfo

func (m *ListDevicesRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

type ListDevicesResponse struct {
	LocalDevice          []*framework.DeviceAttributes `protobuf:"bytes,1,rep,name=local_device,json=localDevice,proto3" json:"local_device,omitempty"`
	RemoteDevice         []*framework.DeviceAttributes `protobuf:"bytes,2,rep,name=remote_device,json=remoteDevice,proto3" json:"remote_device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ListDevicesResponse) Reset()         { *m = ListDevicesResponse{} }
func (m *ListDevicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListDevicesResponse) ProtoMessage()    {}
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{13}
}

func (m *ListDevicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesResponse.Unmarshal(m, b)
}
func (m *ListDevicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesResponse.Marshal(b, m, deterministic)
}
func (m *ListDevicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesResponse.Merge(m, src)
}
func (m *ListDevicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListDevicesResponse.Size(m)
}
func (m *ListDevicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesResponse proto.InternalMessageInfo

func (m *ListDevicesResponse) GetLocalDevice() []*framework.DeviceAttributes {
	if m != nil {
		return m.LocalDevice
	}
	return nil
}

func (m *ListDevicesResponse) GetRemoteDevice() []*framework.DeviceAttributes {
	if m != nil {
		return m.RemoteDevice
	}
	return nil
}

type MakeCallableRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Options that define the behavior of the created callable.
	Options *CallableOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	// Unique identifier for this request. Every MakeCallableRequest must
	// have a unique request_id, and retried MakeCallableRequest must have
	// the same request_id. If request_id is zero, retry detection is disabled.
	RequestId            int64    `protobuf:"varint,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeCallableRequest) Reset()         { *m = MakeCallableRequest{} }
func (m *MakeCallableRequest) String() string { return proto.CompactTextString(m) }
func (*MakeCallableRequest) ProtoMessage()    {}
func (*MakeCallableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{14}
}

func (m *MakeCallableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeCallableRequest.Unmarshal(m, b)
}
func (m *MakeCallableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeCallableRequest.Marshal(b, m, deterministic)
}
func (m *MakeCallableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeCallableRequest.Merge(m, src)
}
func (m *MakeCallableRequest) XXX_Size() int {
	return xxx_messageInfo_MakeCallableRequest.Size(m)
}
func (m *MakeCallableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeCallableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeCallableRequest proto.InternalMessageInfo

func (m *MakeCallableRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *MakeCallableRequest) GetOptions() *CallableOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *MakeCallableRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type MakeCallableResponse struct {
	// A handle to the created callable.
	Handle               int64    `protobuf:"varint,1,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeCallableResponse) Reset()         { *m = MakeCallableResponse{} }
func (m *MakeCallableResponse) String() string { return proto.CompactTextString(m) }
func (*MakeCallableResponse) ProtoMessage()    {}
func (*MakeCallableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{15}
}

func (m *MakeCallableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeCallableResponse.Unmarshal(m, b)
}
func (m *MakeCallableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeCallableResponse.Marshal(b, m, deterministic)
}
func (m *MakeCallableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeCallableResponse.Merge(m, src)
}
func (m *MakeCallableResponse) XXX_Size() int {
	return xxx_messageInfo_MakeCallableResponse.Size(m)
}
func (m *MakeCallableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeCallableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeCallableResponse proto.InternalMessageInfo

func (m *MakeCallableResponse) GetHandle() int64 {
	if m != nil {
		return m.Handle
	}
	return 0
}

type RunCallableRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// REQUIRED: handle must be returned by a MakeCallable call to the same
	// master service.
	Handle int64 `protobuf:"varint,2,opt,name=handle,proto3" json:"handle,omitempty"`
	// Values of the tensors passed as arguments to the callable, in the order
	// defined in the CallableOptions.feed field passed to MakeCallable.
	Feed []*framework.TensorProto `protobuf:"bytes,3,rep,name=feed,proto3" json:"feed,omitempty"`
	// Unique identifier for this request. Every RunCallableRequest must
	// have a unique request_id, and retried RunCallableRequest must have
	// the same request_id. If request_id is zero, retry detection is disabled.
	RequestId            int64    `protobuf:"varint,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCallableRequest) Reset()         { *m = RunCallableRequest{} }
func (m *RunCallableRequest) String() string { return proto.CompactTextString(m) }
func (*RunCallableRequest) ProtoMessage()    {}
func (*RunCallableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{16}
}

func (m *RunCallableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCallableRequest.Unmarshal(m, b)
}
func (m *RunCallableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCallableRequest.Marshal(b, m, deterministic)
}
func (m *RunCallableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCallableRequest.Merge(m, src)
}
func (m *RunCallableRequest) XXX_Size() int {
	return xxx_messageInfo_RunCallableRequest.Size(m)
}
func (m *RunCallableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCallableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunCallableRequest proto.InternalMessageInfo

func (m *RunCallableRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *RunCallableRequest) GetHandle() int64 {
	if m != nil {
		return m.Handle
	}
	return 0
}

func (m *RunCallableRequest) GetFeed() []*framework.TensorProto {
	if m != nil {
		return m.Feed
	}
	return nil
}

func (m *RunCallableRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type RunCallableResponse struct {
	// Values of the tensors returned by the callable, in the order defined in the
	// CallableOptions.fetch field passed to MakeCallable.
	Fetch []*framework.TensorProto `protobuf:"bytes,1,rep,name=fetch,proto3" json:"fetch,omitempty"`
	// Returned metadata if requested in the options.
	Metadata             *RunMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RunCallableResponse) Reset()         { *m = RunCallableResponse{} }
func (m *RunCallableResponse) String() string { return proto.CompactTextString(m) }
func (*RunCallableResponse) ProtoMessage()    {}
func (*RunCallableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{17}
}

func (m *RunCallableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCallableResponse.Unmarshal(m, b)
}
func (m *RunCallableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCallableResponse.Marshal(b, m, deterministic)
}
func (m *RunCallableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCallableResponse.Merge(m, src)
}
func (m *RunCallableResponse) XXX_Size() int {
	return xxx_messageInfo_RunCallableResponse.Size(m)
}
func (m *RunCallableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCallableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunCallableResponse proto.InternalMessageInfo

func (m *RunCallableResponse) GetFetch() []*framework.TensorProto {
	if m != nil {
		return m.Fetch
	}
	return nil
}

func (m *RunCallableResponse) GetMetadata() *RunMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ReleaseCallableRequest struct {
	// REQUIRED: session_handle must be returned by a CreateSession call
	// to the same master service.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// REQUIRED: handle must be returned by a MakeCallable call to the same
	// master service.
	Handle               int64    `protobuf:"varint,2,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseCallableRequest) Reset()         { *m = ReleaseCallableRequest{} }
func (m *ReleaseCallableRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseCallableRequest) ProtoMessage()    {}
func (*ReleaseCallableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{18}
}

func (m *ReleaseCallableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCallableRequest.Unmarshal(m, b)
}
func (m *ReleaseCallableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCallableRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseCallableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCallableRequest.Merge(m, src)
}
func (m *ReleaseCallableRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseCallableRequest.Size(m)
}
func (m *ReleaseCallableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCallableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCallableRequest proto.InternalMessageInfo

func (m *ReleaseCallableRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *ReleaseCallableRequest) GetHandle() int64 {
	if m != nil {
		return m.Handle
	}
	return 0
}

type ReleaseCallableResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseCallableResponse) Reset()         { *m = ReleaseCallableResponse{} }
func (m *ReleaseCallableResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseCallableResponse) ProtoMessage()    {}
func (*ReleaseCallableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5171b2a5dcde72cd, []int{19}
}

func (m *ReleaseCallableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCallableResponse.Unmarshal(m, b)
}
func (m *ReleaseCallableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCallableResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseCallableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCallableResponse.Merge(m, src)
}
func (m *ReleaseCallableResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseCallableResponse.Size(m)
}
func (m *ReleaseCallableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCallableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCallableResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateSessionRequest)(nil), "tensorflow.CreateSessionRequest")
	proto.RegisterType((*CreateSessionResponse)(nil), "tensorflow.CreateSessionResponse")
	proto.RegisterType((*ExtendSessionRequest)(nil), "tensorflow.ExtendSessionRequest")
	proto.RegisterType((*ExtendSessionResponse)(nil), "tensorflow.ExtendSessionResponse")
	proto.RegisterType((*RunStepRequest)(nil), "tensorflow.RunStepRequest")
	proto.RegisterType((*RunStepResponse)(nil), "tensorflow.RunStepResponse")
	proto.RegisterType((*PartialRunSetupRequest)(nil), "tensorflow.PartialRunSetupRequest")
	proto.RegisterType((*PartialRunSetupResponse)(nil), "tensorflow.PartialRunSetupResponse")
	proto.RegisterType((*CloseSessionRequest)(nil), "tensorflow.CloseSessionRequest")
	proto.RegisterType((*CloseSessionResponse)(nil), "tensorflow.CloseSessionResponse")
	proto.RegisterType((*ResetRequest)(nil), "tensorflow.ResetRequest")
	proto.RegisterType((*ResetResponse)(nil), "tensorflow.ResetResponse")
	proto.RegisterType((*ListDevicesRequest)(nil), "tensorflow.ListDevicesRequest")
	proto.RegisterType((*ListDevicesResponse)(nil), "tensorflow.ListDevicesResponse")
	proto.RegisterType((*MakeCallableRequest)(nil), "tensorflow.MakeCallableRequest")
	proto.RegisterType((*MakeCallableResponse)(nil), "tensorflow.MakeCallableResponse")
	proto.RegisterType((*RunCallableRequest)(nil), "tensorflow.RunCallableRequest")
	proto.RegisterType((*RunCallableResponse)(nil), "tensorflow.RunCallableResponse")
	proto.RegisterType((*ReleaseCallableRequest)(nil), "tensorflow.ReleaseCallableRequest")
	proto.RegisterType((*ReleaseCallableResponse)(nil), "tensorflow.ReleaseCallableResponse")
}

func init() {
	proto.RegisterFile("tensorflow/core/protobuf/master.proto", fileDescriptor_5171b2a5dcde72cd)
}

var fileDescriptor_5171b2a5dcde72cd = []byte{
	// 928 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x51, 0x6f, 0x1b, 0x45,
	0x10, 0xd6, 0xd9, 0x89, 0x1b, 0x4f, 0xe2, 0x04, 0xd6, 0x8e, 0x73, 0x0d, 0xad, 0x64, 0x1d, 0x0a,
	0xb2, 0x5a, 0xb0, 0xd3, 0x14, 0xc4, 0x43, 0x91, 0xa0, 0x75, 0x4a, 0xa8, 0x44, 0x20, 0xda, 0x20,
	0x78, 0x3c, 0xad, 0xef, 0xe6, 0x9c, 0x53, 0xcf, 0xbb, 0x66, 0x77, 0xaf, 0x21, 0x7f, 0x83, 0x37,
	0x9e, 0xe0, 0x81, 0x1f, 0xc5, 0x3f, 0xe0, 0x2f, 0xf0, 0x88, 0xbc, 0xbb, 0xb6, 0xef, 0x9c, 0x18,
	0x25, 0x11, 0x6f, 0xde, 0x99, 0x6f, 0x66, 0xbe, 0xf9, 0x76, 0x76, 0xce, 0x70, 0xa0, 0x91, 0x2b,
	0x21, 0x93, 0x4c, 0x5c, 0xf6, 0x23, 0x21, 0xb1, 0x3f, 0x91, 0x42, 0x8b, 0x61, 0x9e, 0xf4, 0xc7,
	0x4c, 0x69, 0x94, 0x3d, 0x73, 0x26, 0xb0, 0x80, 0xed, 0x3f, 0x5b, 0x0e, 0x49, 0x24, 0x1b, 0xe3,
	0xa5, 0x90, 0x6f, 0xfb, 0x31, 0xbe, 0x4b, 0x23, 0x0c, 0x99, 0xd6, 0x32, 0x1d, 0xe6, 0x1a, 0x95,
	0x0d, 0xdf, 0x3f, 0x58, 0x1d, 0x32, 0x92, 0x6c, 0x72, 0xe1, 0x60, 0x1f, 0xad, 0x86, 0x59, 0xcf,
	0xaa, 0x74, 0x73, 0xd2, 0x91, 0xe0, 0x49, 0x3a, 0x72, 0xb0, 0x27, 0x2b, 0x61, 0x28, 0xa5, 0x90,
	0x61, 0x24, 0xe2, 0x39, 0xc3, 0xa7, 0x2b, 0xb1, 0x9c, 0x8d, 0x31, 0x0e, 0x8b, 0xf5, 0x83, 0x5f,
	0x3d, 0x68, 0x0d, 0x24, 0x32, 0x8d, 0xe7, 0xa8, 0x54, 0x2a, 0x38, 0xc5, 0x9f, 0x73, 0x54, 0x9a,
	0x3c, 0x83, 0xba, 0xe9, 0x27, 0x8c, 0x31, 0xf1, 0xbd, 0x8e, 0xd7, 0xdd, 0x3c, 0x6a, 0xf5, 0x16,
	0x99, 0x7b, 0x27, 0x53, 0xe7, 0x31, 0x26, 0x74, 0x63, 0xe4, 0x7e, 0x91, 0x3e, 0xd4, 0x2c, 0x69,
	0xbf, 0x62, 0xf0, 0x7b, 0x45, 0xfc, 0xc0, 0x78, 0xce, 0xa6, 0x45, 0xa9, 0x83, 0x91, 0x36, 0xd4,
	0x34, 0x93, 0x23, 0xd4, 0x7e, 0xb5, 0xe3, 0x75, 0xeb, 0xd4, 0x9d, 0x82, 0x08, 0x76, 0x97, 0x38,
	0xa9, 0x89, 0xe0, 0x0a, 0xc9, 0x01, 0x6c, 0x2b, 0x6b, 0x0a, 0x2f, 0x18, 0x8f, 0x33, 0x34, 0xcc,
	0xea, 0xb4, 0xe1, 0xac, 0xdf, 0x18, 0x23, 0xf9, 0x10, 0x1a, 0x96, 0xfb, 0x3b, 0x94, 0x53, 0xb3,
	0xe1, 0x53, 0xa5, 0x5b, 0xc6, 0xf8, 0xa3, 0xb5, 0x05, 0x7f, 0x7a, 0xd0, 0x7a, 0xfd, 0x8b, 0x46,
	0x1e, 0x2f, 0x75, 0x7e, 0xcb, 0x22, 0x25, 0x81, 0x2a, 0xb7, 0x12, 0xe8, 0x08, 0x76, 0xa3, 0x5c,
	0x4a, 0xe4, 0x3a, 0x2c, 0xf3, 0xab, 0x1a, 0x7e, 0x4d, 0xe7, 0x3c, 0x29, 0xd2, 0x1c, 0xc0, 0xee,
	0x12, 0x4b, 0xa7, 0xc5, 0x13, 0x78, 0x9f, 0xe3, 0xe5, 0x52, 0xa2, 0x35, 0x93, 0x68, 0x87, 0xe3,
	0x65, 0x29, 0xc9, 0x5f, 0x15, 0xd8, 0xa6, 0x39, 0x3f, 0xd7, 0x38, 0xb9, 0x63, 0x97, 0x87, 0xb0,
	0x96, 0x20, 0xc6, 0x7e, 0xa5, 0x53, 0xed, 0x6e, 0x1e, 0x3d, 0x2a, 0x36, 0xf8, 0xdd, 0x74, 0x9a,
	0x7e, 0x30, 0x67, 0x7b, 0xad, 0x06, 0x49, 0x5a, 0xb0, 0x9e, 0xa0, 0x8e, 0x2e, 0xfc, 0x6a, 0xa7,
	0xda, 0xad, 0x53, 0x7b, 0x28, 0x5c, 0xf5, 0x9a, 0x31, 0xbb, 0x13, 0x39, 0x84, 0x07, 0x62, 0xa2,
	0x53, 0xc1, 0x95, 0xbf, 0x6e, 0x34, 0x6c, 0x17, 0x4b, 0xd0, 0x9c, 0x7f, 0x6f, 0xbd, 0x74, 0x06,
	0x23, 0x1f, 0x03, 0x99, 0x30, 0xa9, 0x53, 0x96, 0x85, 0x32, 0x9f, 0x93, 0xaf, 0x19, 0xf2, 0xef,
	0x39, 0x0f, 0xcd, 0x67, 0xfc, 0xbf, 0x82, 0xc7, 0x4a, 0x0b, 0x89, 0xa1, 0x79, 0x27, 0x2a, 0x4c,
	0x79, 0x28, 0x9d, 0x82, 0xe1, 0x50, 0xc4, 0x57, 0xfe, 0x83, 0x8e, 0xd7, 0xdd, 0xa0, 0x0f, 0x0d,
	0xe8, 0xb5, 0xc1, 0xbc, 0x99, 0x6b, 0xfc, 0x4a, 0xc4, 0x57, 0xe4, 0x31, 0x80, 0xb4, 0x9a, 0x85,
	0x69, 0xec, 0x6f, 0x18, 0x81, 0xeb, 0xce, 0xf2, 0x26, 0x0e, 0xfe, 0xf6, 0x60, 0x67, 0x2e, 0xad,
	0xbb, 0x9a, 0x4f, 0xa1, 0x66, 0x9b, 0xf0, 0xbd, 0x5b, 0xc8, 0xe6, 0xb0, 0xe4, 0x39, 0x6c, 0x8c,
	0x51, 0xb3, 0x98, 0x69, 0x76, 0xd3, 0x03, 0xa2, 0x39, 0x3f, 0x75, 0x6e, 0x3a, 0x07, 0x92, 0xcf,
	0x61, 0x53, 0x69, 0xa6, 0x73, 0x65, 0x56, 0x80, 0x19, 0xa4, 0xed, 0xb2, 0x86, 0xa6, 0xf1, 0xde,
	0x40, 0xc4, 0x48, 0xc1, 0x42, 0xa7, 0xbf, 0xc9, 0x21, 0xb4, 0x5c, 0xa0, 0xdd, 0x20, 0x63, 0x54,
	0x8a, 0x8d, 0xd0, 0x4c, 0x50, 0x9d, 0x12, 0xeb, 0x33, 0x82, 0x9c, 0x5a, 0x4f, 0xf0, 0x87, 0x07,
	0xed, 0xb3, 0xb9, 0xbe, 0xe7, 0xa8, 0xf3, 0xbb, 0x0e, 0x13, 0x29, 0x0c, 0x53, 0xfd, 0x5e, 0xe3,
	0x52, 0xbe, 0x8c, 0xf5, 0xe5, 0xcb, 0x38, 0x81, 0xbd, 0x6b, 0x0c, 0xdd, 0x9d, 0xdc, 0x3c, 0x36,
	0xde, 0xcd, 0x63, 0x13, 0x7c, 0x01, 0xcd, 0x41, 0x26, 0x14, 0xde, 0x6b, 0x35, 0x04, 0x6d, 0x68,
	0x95, 0xa3, 0x2d, 0x87, 0xe0, 0x1c, 0xb6, 0x28, 0x2a, 0xd4, 0xb3, 0x74, 0x8f, 0xa0, 0x1e, 0x09,
	0xae, 0x59, 0xca, 0xd1, 0x8e, 0x4a, 0x9d, 0x2e, 0x0c, 0xd3, 0x62, 0xee, 0x23, 0x94, 0xa4, 0x99,
	0x46, 0xa9, 0x9c, 0x6e, 0x0d, 0x6b, 0xfd, 0xda, 0x1a, 0x83, 0x1d, 0x68, 0xb8, 0xa4, 0xae, 0xca,
	0x0b, 0x20, 0xdf, 0xa6, 0x4a, 0x1f, 0x1b, 0x94, 0xba, 0x23, 0xf5, 0xdf, 0x3c, 0x68, 0x96, 0xa2,
	0x9d, 0x7c, 0x5f, 0xc2, 0x56, 0x26, 0x22, 0x96, 0x85, 0xb6, 0xf8, 0x4d, 0x83, 0x6d, 0x43, 0x5e,
	0xce, 0x3f, 0x98, 0x74, 0xd3, 0x44, 0x58, 0x33, 0x79, 0x09, 0x0d, 0x89, 0x63, 0xa1, 0x71, 0x96,
	0xa1, 0x72, 0x8b, 0x0c, 0x5b, 0x36, 0xc4, 0xda, 0xa7, 0xdf, 0xaa, 0xe6, 0x29, 0x7b, 0x8b, 0x03,
	0x96, 0x65, 0x6c, 0x98, 0xe1, 0x1d, 0xa7, 0xef, 0xb3, 0xc5, 0xaa, 0xb1, 0xcf, 0xeb, 0x83, 0xd2,
	0xf7, 0xc9, 0x25, 0xbd, 0xb6, 0x6f, 0xca, 0x23, 0x57, 0x5d, 0x1e, 0xb9, 0x1e, 0xb4, 0xca, 0x9c,
	0x9c, 0x60, 0x6d, 0xa8, 0x15, 0xc8, 0x54, 0xa9, 0x3b, 0x05, 0xbf, 0x7b, 0x40, 0x68, 0xce, 0xef,
	0xd9, 0xc3, 0x22, 0x6b, 0xa5, 0x98, 0x95, 0x3c, 0x75, 0x2f, 0xab, 0x6a, 0x44, 0x2d, 0xed, 0x8d,
	0xeb, 0x1b, 0xba, 0xdc, 0xd1, 0xda, 0x72, 0x47, 0x57, 0xd0, 0x2c, 0x11, 0x74, 0x0d, 0x7d, 0x32,
	0x7b, 0xa8, 0xde, 0x7f, 0xd7, 0x70, 0x2f, 0xf8, 0x3e, 0xdb, 0x2c, 0xf8, 0x09, 0xda, 0x14, 0x33,
	0x64, 0x0a, 0xff, 0x5f, 0x7d, 0x82, 0x87, 0xb0, 0x77, 0x2d, 0xb1, 0xdb, 0xf1, 0x2f, 0x60, 0x5f,
	0xc8, 0x51, 0x91, 0x5b, 0x9c, 0x2a, 0x2d, 0x73, 0xae, 0xd3, 0x31, 0xbe, 0xf2, 0x8f, 0xa7, 0x07,
	0x33, 0x8e, 0x31, 0xb5, 0x36, 0xd3, 0xa6, 0x3a, 0xf3, 0xfe, 0xf1, 0xbc, 0x61, 0xcd, 0xfc, 0x8b,
	0x7a, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36, 0x5d, 0xb1, 0xdd, 0x7c, 0x0a, 0x00, 0x00,
}
