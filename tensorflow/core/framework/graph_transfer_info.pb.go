// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/smoug25/tensorflow_serving_helper/tensorflow/core/framework/graph_transfer_info.proto

package tensorflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GraphTransferInfo_Destination int32

const (
	GraphTransferInfo_NOP     GraphTransferInfo_Destination = 0
	GraphTransferInfo_HEXAGON GraphTransferInfo_Destination = 1
)

var GraphTransferInfo_Destination_name = map[int32]string{
	0: "NOP",
	1: "HEXAGON",
}

var GraphTransferInfo_Destination_value = map[string]int32{
	"NOP":     0,
	"HEXAGON": 1,
}

func (x GraphTransferInfo_Destination) String() string {
	return proto.EnumName(GraphTransferInfo_Destination_name, int32(x))
}

func (GraphTransferInfo_Destination) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{7, 0}
}

type GraphTransferNodeInput struct {
	NodeId               int32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	OutputPort           int32    `protobuf:"varint,2,opt,name=output_port,json=outputPort,proto3" json:"output_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTransferNodeInput) Reset()         { *m = GraphTransferNodeInput{} }
func (m *GraphTransferNodeInput) String() string { return proto.CompactTextString(m) }
func (*GraphTransferNodeInput) ProtoMessage()    {}
func (*GraphTransferNodeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{0}
}

func (m *GraphTransferNodeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferNodeInput.Unmarshal(m, b)
}
func (m *GraphTransferNodeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferNodeInput.Marshal(b, m, deterministic)
}
func (m *GraphTransferNodeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferNodeInput.Merge(m, src)
}
func (m *GraphTransferNodeInput) XXX_Size() int {
	return xxx_messageInfo_GraphTransferNodeInput.Size(m)
}
func (m *GraphTransferNodeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferNodeInput.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferNodeInput proto.InternalMessageInfo

func (m *GraphTransferNodeInput) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *GraphTransferNodeInput) GetOutputPort() int32 {
	if m != nil {
		return m.OutputPort
	}
	return 0
}

type GraphTransferNodeInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeId               int32    `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	TypeName             string   `protobuf:"bytes,3,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	SocOpId              int32    `protobuf:"varint,4,opt,name=soc_op_id,json=socOpId,proto3" json:"soc_op_id,omitempty"`
	PaddingId            int32    `protobuf:"varint,5,opt,name=padding_id,json=paddingId,proto3" json:"padding_id,omitempty"`
	InputCount           int32    `protobuf:"varint,6,opt,name=input_count,json=inputCount,proto3" json:"input_count,omitempty"`
	OutputCount          int32    `protobuf:"varint,7,opt,name=output_count,json=outputCount,proto3" json:"output_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTransferNodeInfo) Reset()         { *m = GraphTransferNodeInfo{} }
func (m *GraphTransferNodeInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferNodeInfo) ProtoMessage()    {}
func (*GraphTransferNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{1}
}

func (m *GraphTransferNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferNodeInfo.Unmarshal(m, b)
}
func (m *GraphTransferNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferNodeInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferNodeInfo.Merge(m, src)
}
func (m *GraphTransferNodeInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferNodeInfo.Size(m)
}
func (m *GraphTransferNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferNodeInfo proto.InternalMessageInfo

func (m *GraphTransferNodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GraphTransferNodeInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *GraphTransferNodeInfo) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *GraphTransferNodeInfo) GetSocOpId() int32 {
	if m != nil {
		return m.SocOpId
	}
	return 0
}

func (m *GraphTransferNodeInfo) GetPaddingId() int32 {
	if m != nil {
		return m.PaddingId
	}
	return 0
}

func (m *GraphTransferNodeInfo) GetInputCount() int32 {
	if m != nil {
		return m.InputCount
	}
	return 0
}

func (m *GraphTransferNodeInfo) GetOutputCount() int32 {
	if m != nil {
		return m.OutputCount
	}
	return 0
}

type GraphTransferConstNodeInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeId               int32    `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Shape                []int64  `protobuf:"varint,3,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Dtype                DataType `protobuf:"varint,5,opt,name=dtype,proto3,enum=tensorflow.DataType" json:"dtype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTransferConstNodeInfo) Reset()         { *m = GraphTransferConstNodeInfo{} }
func (m *GraphTransferConstNodeInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferConstNodeInfo) ProtoMessage()    {}
func (*GraphTransferConstNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{2}
}

func (m *GraphTransferConstNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferConstNodeInfo.Unmarshal(m, b)
}
func (m *GraphTransferConstNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferConstNodeInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferConstNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferConstNodeInfo.Merge(m, src)
}
func (m *GraphTransferConstNodeInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferConstNodeInfo.Size(m)
}
func (m *GraphTransferConstNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferConstNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferConstNodeInfo proto.InternalMessageInfo

func (m *GraphTransferConstNodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GraphTransferConstNodeInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *GraphTransferConstNodeInfo) GetShape() []int64 {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *GraphTransferConstNodeInfo) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GraphTransferConstNodeInfo) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_DT_INVALID
}

type GraphTransferNodeInputInfo struct {
	NodeId               int32                     `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeInput            []*GraphTransferNodeInput `protobuf:"bytes,2,rep,name=node_input,json=nodeInput,proto3" json:"node_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GraphTransferNodeInputInfo) Reset()         { *m = GraphTransferNodeInputInfo{} }
func (m *GraphTransferNodeInputInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferNodeInputInfo) ProtoMessage()    {}
func (*GraphTransferNodeInputInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{3}
}

func (m *GraphTransferNodeInputInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferNodeInputInfo.Unmarshal(m, b)
}
func (m *GraphTransferNodeInputInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferNodeInputInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferNodeInputInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferNodeInputInfo.Merge(m, src)
}
func (m *GraphTransferNodeInputInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferNodeInputInfo.Size(m)
}
func (m *GraphTransferNodeInputInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferNodeInputInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferNodeInputInfo proto.InternalMessageInfo

func (m *GraphTransferNodeInputInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *GraphTransferNodeInputInfo) GetNodeInput() []*GraphTransferNodeInput {
	if m != nil {
		return m.NodeInput
	}
	return nil
}

type GraphTransferNodeOutputInfo struct {
	NodeId               int32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MaxByteSize          []int32  `protobuf:"varint,2,rep,packed,name=max_byte_size,json=maxByteSize,proto3" json:"max_byte_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTransferNodeOutputInfo) Reset()         { *m = GraphTransferNodeOutputInfo{} }
func (m *GraphTransferNodeOutputInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferNodeOutputInfo) ProtoMessage()    {}
func (*GraphTransferNodeOutputInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{4}
}

func (m *GraphTransferNodeOutputInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferNodeOutputInfo.Unmarshal(m, b)
}
func (m *GraphTransferNodeOutputInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferNodeOutputInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferNodeOutputInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferNodeOutputInfo.Merge(m, src)
}
func (m *GraphTransferNodeOutputInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferNodeOutputInfo.Size(m)
}
func (m *GraphTransferNodeOutputInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferNodeOutputInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferNodeOutputInfo proto.InternalMessageInfo

func (m *GraphTransferNodeOutputInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *GraphTransferNodeOutputInfo) GetMaxByteSize() []int32 {
	if m != nil {
		return m.MaxByteSize
	}
	return nil
}

type GraphTransferGraphInputNodeInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shape                []int64  `protobuf:"varint,2,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Dtype                DataType `protobuf:"varint,3,opt,name=dtype,proto3,enum=tensorflow.DataType" json:"dtype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTransferGraphInputNodeInfo) Reset()         { *m = GraphTransferGraphInputNodeInfo{} }
func (m *GraphTransferGraphInputNodeInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferGraphInputNodeInfo) ProtoMessage()    {}
func (*GraphTransferGraphInputNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{5}
}

func (m *GraphTransferGraphInputNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferGraphInputNodeInfo.Unmarshal(m, b)
}
func (m *GraphTransferGraphInputNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferGraphInputNodeInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferGraphInputNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferGraphInputNodeInfo.Merge(m, src)
}
func (m *GraphTransferGraphInputNodeInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferGraphInputNodeInfo.Size(m)
}
func (m *GraphTransferGraphInputNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferGraphInputNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferGraphInputNodeInfo proto.InternalMessageInfo

func (m *GraphTransferGraphInputNodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GraphTransferGraphInputNodeInfo) GetShape() []int64 {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *GraphTransferGraphInputNodeInfo) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_DT_INVALID
}

type GraphTransferGraphOutputNodeInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shape                []int64  `protobuf:"varint,2,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Dtype                DataType `protobuf:"varint,3,opt,name=dtype,proto3,enum=tensorflow.DataType" json:"dtype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTransferGraphOutputNodeInfo) Reset()         { *m = GraphTransferGraphOutputNodeInfo{} }
func (m *GraphTransferGraphOutputNodeInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferGraphOutputNodeInfo) ProtoMessage()    {}
func (*GraphTransferGraphOutputNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{6}
}

func (m *GraphTransferGraphOutputNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferGraphOutputNodeInfo.Unmarshal(m, b)
}
func (m *GraphTransferGraphOutputNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferGraphOutputNodeInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferGraphOutputNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferGraphOutputNodeInfo.Merge(m, src)
}
func (m *GraphTransferGraphOutputNodeInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferGraphOutputNodeInfo.Size(m)
}
func (m *GraphTransferGraphOutputNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferGraphOutputNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferGraphOutputNodeInfo proto.InternalMessageInfo

func (m *GraphTransferGraphOutputNodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GraphTransferGraphOutputNodeInfo) GetShape() []int64 {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *GraphTransferGraphOutputNodeInfo) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_DT_INVALID
}

// Protocol buffer representing a handle to a tensorflow resource. Handles are
// not valid across executions, but can be serialized back and forth from within
// a single run.
type GraphTransferInfo struct {
	NodeInfo       []*GraphTransferNodeInfo       `protobuf:"bytes,1,rep,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	ConstNodeInfo  []*GraphTransferConstNodeInfo  `protobuf:"bytes,2,rep,name=const_node_info,json=constNodeInfo,proto3" json:"const_node_info,omitempty"`
	NodeInputInfo  []*GraphTransferNodeInputInfo  `protobuf:"bytes,3,rep,name=node_input_info,json=nodeInputInfo,proto3" json:"node_input_info,omitempty"`
	NodeOutputInfo []*GraphTransferNodeOutputInfo `protobuf:"bytes,4,rep,name=node_output_info,json=nodeOutputInfo,proto3" json:"node_output_info,omitempty"`
	// Input Node parameters of transferred graph
	GraphInputNodeInfo  []*GraphTransferGraphInputNodeInfo  `protobuf:"bytes,5,rep,name=graph_input_node_info,json=graphInputNodeInfo,proto3" json:"graph_input_node_info,omitempty"`
	GraphOutputNodeInfo []*GraphTransferGraphOutputNodeInfo `protobuf:"bytes,6,rep,name=graph_output_node_info,json=graphOutputNodeInfo,proto3" json:"graph_output_node_info,omitempty"`
	// Destination of graph transfer
	Destination          GraphTransferInfo_Destination `protobuf:"varint,7,opt,name=destination,proto3,enum=tensorflow.GraphTransferInfo_Destination" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GraphTransferInfo) Reset()         { *m = GraphTransferInfo{} }
func (m *GraphTransferInfo) String() string { return proto.CompactTextString(m) }
func (*GraphTransferInfo) ProtoMessage()    {}
func (*GraphTransferInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd25bee5326e6a, []int{7}
}

func (m *GraphTransferInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTransferInfo.Unmarshal(m, b)
}
func (m *GraphTransferInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTransferInfo.Marshal(b, m, deterministic)
}
func (m *GraphTransferInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTransferInfo.Merge(m, src)
}
func (m *GraphTransferInfo) XXX_Size() int {
	return xxx_messageInfo_GraphTransferInfo.Size(m)
}
func (m *GraphTransferInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTransferInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTransferInfo proto.InternalMessageInfo

func (m *GraphTransferInfo) GetNodeInfo() []*GraphTransferNodeInfo {
	if m != nil {
		return m.NodeInfo
	}
	return nil
}

func (m *GraphTransferInfo) GetConstNodeInfo() []*GraphTransferConstNodeInfo {
	if m != nil {
		return m.ConstNodeInfo
	}
	return nil
}

func (m *GraphTransferInfo) GetNodeInputInfo() []*GraphTransferNodeInputInfo {
	if m != nil {
		return m.NodeInputInfo
	}
	return nil
}

func (m *GraphTransferInfo) GetNodeOutputInfo() []*GraphTransferNodeOutputInfo {
	if m != nil {
		return m.NodeOutputInfo
	}
	return nil
}

func (m *GraphTransferInfo) GetGraphInputNodeInfo() []*GraphTransferGraphInputNodeInfo {
	if m != nil {
		return m.GraphInputNodeInfo
	}
	return nil
}

func (m *GraphTransferInfo) GetGraphOutputNodeInfo() []*GraphTransferGraphOutputNodeInfo {
	if m != nil {
		return m.GraphOutputNodeInfo
	}
	return nil
}

func (m *GraphTransferInfo) GetDestination() GraphTransferInfo_Destination {
	if m != nil {
		return m.Destination
	}
	return GraphTransferInfo_NOP
}

func init() {
	proto.RegisterEnum("tensorflow.GraphTransferInfo_Destination", GraphTransferInfo_Destination_name, GraphTransferInfo_Destination_value)
	proto.RegisterType((*GraphTransferNodeInput)(nil), "tensorflow.GraphTransferNodeInput")
	proto.RegisterType((*GraphTransferNodeInfo)(nil), "tensorflow.GraphTransferNodeInfo")
	proto.RegisterType((*GraphTransferConstNodeInfo)(nil), "tensorflow.GraphTransferConstNodeInfo")
	proto.RegisterType((*GraphTransferNodeInputInfo)(nil), "tensorflow.GraphTransferNodeInputInfo")
	proto.RegisterType((*GraphTransferNodeOutputInfo)(nil), "tensorflow.GraphTransferNodeOutputInfo")
	proto.RegisterType((*GraphTransferGraphInputNodeInfo)(nil), "tensorflow.GraphTransferGraphInputNodeInfo")
	proto.RegisterType((*GraphTransferGraphOutputNodeInfo)(nil), "tensorflow.GraphTransferGraphOutputNodeInfo")
	proto.RegisterType((*GraphTransferInfo)(nil), "tensorflow.GraphTransferInfo")
}

func init() {
	proto.RegisterFile("github.com/smoug25/tensorflow_serving_helper/tensorflow/core/framework/graph_transfer_info.proto", fileDescriptor_6fcd25bee5326e6a)
}

var fileDescriptor_6fcd25bee5326e6a = []byte{
	// 680 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5b, 0x6f, 0xd3, 0x4c,
	0x10, 0xfd, 0x9c, 0x6b, 0x33, 0xe9, 0xed, 0x33, 0x6d, 0xb1, 0x5a, 0xa1, 0xb6, 0x46, 0x82, 0x72,
	0x51, 0x22, 0x05, 0x21, 0xde, 0x90, 0x7a, 0x41, 0xa5, 0x42, 0x4a, 0xc2, 0xd2, 0x07, 0xc4, 0x03,
	0x66, 0x6b, 0xaf, 0x1d, 0x8b, 0x66, 0xd7, 0xb2, 0x37, 0xb4, 0xe9, 0x9f, 0xe1, 0xaf, 0xf1, 0x33,
	0x90, 0x78, 0x41, 0x3b, 0xeb, 0xc6, 0x36, 0x69, 0x52, 0x84, 0xe0, 0x6d, 0x2f, 0x33, 0xe7, 0xcc,
	0x99, 0x39, 0xf6, 0xc2, 0xa7, 0x20, 0x94, 0x83, 0xd1, 0x59, 0xcb, 0x15, 0xc3, 0x76, 0x32, 0x14,
	0xa3, 0xa0, 0xf3, 0xbc, 0x2d, 0x19, 0x4f, 0x44, 0xec, 0x9f, 0x8b, 0x0b, 0x27, 0x61, 0xf1, 0x97,
	0x90, 0x07, 0xce, 0x80, 0x9d, 0x47, 0x2c, 0xce, 0xdd, 0xb4, 0x5d, 0x11, 0xb3, 0xb6, 0x1f, 0xd3,
	0x21, 0xbb, 0x10, 0xf1, 0xe7, 0x76, 0x10, 0xd3, 0x68, 0xe0, 0xc8, 0x98, 0xf2, 0xc4, 0x67, 0xb1,
	0x13, 0x72, 0x5f, 0xb4, 0xa2, 0x58, 0x48, 0x61, 0x42, 0x96, 0xb4, 0x49, 0xfe, 0x12, 0x9b, 0x1c,
	0x47, 0x2c, 0xd1, 0xf8, 0x36, 0x81, 0x8d, 0x63, 0x45, 0x7e, 0x9a, 0x72, 0x77, 0x85, 0xc7, 0x4e,
	0x78, 0x34, 0x92, 0xe6, 0x5d, 0xa8, 0x73, 0xe1, 0x31, 0x27, 0xf4, 0x2c, 0x63, 0xc7, 0xd8, 0xab,
	0x92, 0x9a, 0xda, 0x9e, 0x78, 0xe6, 0x36, 0x34, 0xc5, 0x48, 0x46, 0x23, 0xe9, 0x44, 0x22, 0x96,
	0x56, 0x09, 0x2f, 0x41, 0x1f, 0xf5, 0x45, 0x2c, 0xed, 0x6f, 0x06, 0xac, 0xdf, 0x00, 0xea, 0x0b,
	0xd3, 0x84, 0x0a, 0xa7, 0x43, 0x86, 0x80, 0x0d, 0x82, 0xeb, 0x3c, 0x4f, 0xa9, 0xc0, 0xb3, 0x05,
	0x0d, 0x55, 0xa9, 0x83, 0x19, 0x65, 0xcc, 0x58, 0x50, 0x07, 0x5d, 0x95, 0xb5, 0x09, 0x8d, 0x44,
	0xb8, 0x8e, 0x88, 0x54, 0x5e, 0x05, 0xf3, 0xea, 0x89, 0x70, 0x7b, 0xd1, 0x89, 0x67, 0xde, 0x03,
	0x88, 0xa8, 0xe7, 0xa9, 0x5e, 0x84, 0x9e, 0x55, 0xc5, 0xcb, 0x46, 0x7a, 0xa2, 0xeb, 0x0f, 0x95,
	0x42, 0xc7, 0x15, 0x23, 0x2e, 0xad, 0x9a, 0xae, 0x1f, 0x8f, 0x0e, 0xd5, 0x89, 0xb9, 0x0b, 0x8b,
	0xa9, 0x40, 0x1d, 0x51, 0xc7, 0x88, 0x54, 0x34, 0x86, 0xd8, 0x5f, 0x0d, 0xd8, 0x2c, 0x48, 0x3c,
	0x14, 0x3c, 0x91, 0x7f, 0xa6, 0x73, 0x0d, 0xaa, 0xc9, 0x80, 0x46, 0x4a, 0x63, 0x79, 0xaf, 0x4c,
	0xf4, 0x46, 0x41, 0x78, 0x54, 0x52, 0xd4, 0xb6, 0x48, 0x70, 0x6d, 0x3e, 0x86, 0xaa, 0xa7, 0x3a,
	0x80, 0x9a, 0x96, 0x3b, 0x6b, 0xad, 0x6c, 0xc6, 0xad, 0x23, 0x2a, 0xe9, 0xe9, 0x38, 0x62, 0x44,
	0x87, 0xd8, 0x97, 0xbf, 0x14, 0x38, 0x19, 0x2c, 0x16, 0x38, 0x73, 0xb8, 0xfb, 0x00, 0xfa, 0x42,
	0x85, 0x5a, 0xa5, 0x9d, 0xf2, 0x5e, 0xb3, 0x63, 0xe7, 0x79, 0x6e, 0x06, 0x25, 0x0d, 0x7e, 0xbd,
	0xb4, 0x3f, 0xc0, 0xd6, 0x54, 0x50, 0x0f, 0x7b, 0x37, 0x9f, 0xda, 0x86, 0xa5, 0x21, 0xbd, 0x74,
	0xce, 0xc6, 0x92, 0x39, 0x49, 0x78, 0xc5, 0x90, 0xbd, 0x4a, 0x9a, 0x43, 0x7a, 0x79, 0x30, 0x96,
	0xec, 0x5d, 0x78, 0xc5, 0xec, 0x0b, 0xd8, 0x2e, 0x60, 0xe3, 0x06, 0x69, 0xe7, 0xf6, 0x7e, 0xd2,
	0xe2, 0x52, 0xbe, 0xc5, 0x93, 0x76, 0x96, 0x7f, 0xa7, 0x9d, 0x3b, 0xd3, 0xc4, 0x5a, 0xd5, 0x3f,
	0x66, 0xfe, 0x51, 0x81, 0xff, 0x0b, 0xd4, 0xc8, 0xf5, 0x12, 0x1a, 0xe9, 0x9c, 0x7c, 0x61, 0x19,
	0x38, 0xa6, 0xdd, 0x5b, 0xc6, 0xe4, 0x0b, 0xb2, 0xc0, 0xaf, 0x6b, 0xed, 0xc2, 0x8a, 0xab, 0x2c,
	0xeb, 0x64, 0x28, 0x7a, 0xd8, 0x0f, 0x66, 0xa2, 0x14, 0x2c, 0x4e, 0x96, 0xdc, 0x82, 0xe3, 0xbb,
	0xb0, 0x92, 0xf9, 0x46, 0xe3, 0x95, 0x6f, 0xc1, 0x2b, 0x38, 0x92, 0x2c, 0xf1, 0x82, 0x41, 0xdf,
	0xc2, 0x2a, 0xe2, 0xa5, 0x1f, 0x22, 0x02, 0x56, 0x10, 0xf0, 0xe1, 0x5c, 0xc0, 0xcc, 0x68, 0x64,
	0x99, 0x17, 0x8d, 0xf7, 0x11, 0xd6, 0xf5, 0x7f, 0x56, 0xd7, 0x98, 0x09, 0xaf, 0x22, 0xee, 0x93,
	0x99, 0xb8, 0xd3, 0x26, 0x23, 0x66, 0x30, 0x6d, 0x3c, 0x0a, 0x1b, 0x1a, 0x3f, 0xad, 0x39, 0x23,
	0xa8, 0x21, 0xc1, 0xd3, 0xf9, 0x04, 0x45, 0x33, 0x91, 0x3b, 0xc1, 0x0d, 0x0e, 0x7b, 0x03, 0x4d,
	0x8f, 0x25, 0x32, 0xe4, 0x54, 0x86, 0x82, 0xe3, 0x8f, 0x69, 0xb9, 0xf3, 0x68, 0x26, 0xae, 0xca,
	0x69, 0x1d, 0x65, 0x09, 0x24, 0x9f, 0x6d, 0xdf, 0x87, 0x66, 0xee, 0xce, 0xac, 0x43, 0xb9, 0xdb,
	0xeb, 0xaf, 0xfe, 0x67, 0x36, 0xa1, 0xfe, 0xfa, 0xd5, 0xfb, 0xfd, 0xe3, 0x5e, 0x77, 0xd5, 0x38,
	0x78, 0x01, 0x96, 0x88, 0x83, 0x3c, 0xc3, 0xe4, 0x1d, 0x39, 0xd8, 0x98, 0x22, 0xeb, 0xab, 0x37,
	0xa5, 0x6f, 0x7c, 0x37, 0x8c, 0xb3, 0x1a, 0xbe, 0x2f, 0xcf, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xb8, 0xfd, 0x65, 0xb1, 0x23, 0x07, 0x00, 0x00,
}
